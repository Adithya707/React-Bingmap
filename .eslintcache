[{"/home/adihtya/Desktop/R3/my-app/src/index.js":"1","/home/adihtya/Desktop/R3/my-app/src/App.js":"2","/home/adihtya/Desktop/R3/my-app/src/reportWebVitals.js":"3"},{"size":166,"mtime":1540377318000,"results":"4","hashOfConfig":"5"},{"size":11879,"mtime":1606986306007,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1606977865788,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1u7fc67",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/adihtya/Desktop/R3/my-app/src/index.js",[],["17","18"],"/home/adihtya/Desktop/R3/my-app/src/App.js",["19"],"import React, { Component } from 'react';\nimport ReactBingmaps from 'components/ReactBingmaps';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible : true,\n      bingmapKey: \"An-BEkdqKbpPO4qTrsI2ar1JOFmEbawOFwG41wlr3ql_PkcO7cx4T0drW7JOrlVT\", //Don't use this key in your environment.\n      infoboxes : [\n        {\n          \"location\":[13.0827, 80.2707], \"option\":{ title: 'Chennai', description: '...' }, \"addHandler\": {\"type\" : \"click\", callback: this.callBackMethod}\n        }\n      ],\n      pushPins : [\n        {\n          \"location\":[13.0827, 80.2707], \"option\":{ color: 'red' }, \"addHandler\": {\"type\" : \"click\", callback: this.callBackMethod }\n        }\n      ],\n      regularPolygons:[\n        {\n          \"center\":[13.0827, 80.2707],\n          \"radius\":5,\n          \"points\":36,\n          \"option\": {fillColor: \"rgba(0,0,0,0.5)\", strokeThickness: 2}\n        }\n      ],\n      infoboxesWithPushPins: [\n        {\n          \"location\":[13.0827, 80.2707], \n          \"addHandler\":\"mouseover\", //on mouseover the pushpin, infobox shown\n          \"infoboxOption\": { title: 'Infobox Title', description: 'Infobox' },\n          \"pushPinOption\":{ title: 'Pushpin Title', description: 'Pushpin' },\n          \"infoboxAddHandler\": {\"type\" : \"click\", callback: this.callBackMethod },\n          \"pushPinAddHandler\": {\"type\" : \"click\", callback: this.callBackMethod }\n        }\n      ],\n      boundary: {\n        \"location\":['chennai'],\n        \"option\":{\n          entityType: 'PopulatedPlace'\n        },\n        \"polygonStyle\" :{\n          fillColor: 'rgba(161,224,255,0.4)',\n          strokeColor: '#a495b2',\n          strokeThickness: 2\n        }\n      },\n      searchInput: \"\",\n      getLocationHandledData: \"\",\n      polyline: {\n        \"location\": [[13.0827, 80.2707],[13.0827, 80.1907]],\n        \"option\": { strokeColor: 'blue', strokeThickness: 10, strokeDashArray: [1, 2, 5, 10] }\n      },\n      directions: {\n        \"renderOptions\": {\"itineraryContainer\": \"itineraryContainer\" },\n        \"requestOptions\": {\"routeMode\": \"driving\", \"maxRoutes\": 2},\n        \"wayPoints\": [\n              {\n                address: 'Chennai, Tamilnadu'\n              },\n              {\n                address: 'Salem, Tamilnadu'\n              }\n            ]\n      }\n    }\n  }\n  changeState(){\n    this.setState({\n      infoboxes : [\n        {\n          \"location\":[13.0827, 80.2707], \"option\":{ title: 'Chennai', description: 'Tamilnadu' }, \"addHandler\": {\"type\" : \"click\", callback: this.callBackMethod}\n        }\n      ],\n      pushPins : [\n        {\n          \"location\":[13.0827, 80.2707], \"option\":{ color: 'yellow' }, \"addHandler\": {\"type\" : \"click\", callback: this.callBackMethod }\n        },\n        {\n          \"location\":[13.0727, 80.2707], \"option\":{ color: 'green' }, \"addHandler\": {\"type\" : \"click\", callback: this.callBackMethod }\n        }\n      ],\n      regularPolygons:[\n        {\n          \"center\":[13.0827, 80.2707],\n          \"radius\":5,\n          \"points\":6,\n          \"option\": {fillColor: \"rgba(0,0,0,0.5)\", strokeThickness: 2}\n        }\n      ],\n      infoboxesWithPushPins: [\n        {\n          \"location\":[13.0827, 80.2707], \n          \"addHandler\":\"mouseover\", //on mouseover the pushpin, infobox shown\n          \"infoboxOption\": { title: 'Chennai', description: 'Infobox' },\n          \"pushPinOption\":{ title: 'Chennai', description: 'Pushpin' },\n          \"infoboxAddHandler\": {\"type\" : \"click\", callback: this.callBackMethod },\n          \"pushPinAddHandler\": {\"type\" : \"click\", callback: this.callBackMethod }\n        }\n      ],\n      boundary: {\n        \"search\" : \"636303\",\n        \"polygonStyle\" :{\n          fillColor: 'rgba(161,224,255,0.4)',\n          strokeColor: '#a495b2',\n          strokeThickness: 2\n        },\n        \"option\":{\n          entityType: 'PopulatedPlace'\n        }\n      },\n      polyline: {\n        \"location\": [[13.0827, 80.2707],[13.0527, 80.2707]],\n        \"option\": { strokeColor: 'red', strokeThickness: 10, strokeDashArray: [1, 2, 5, 10] }\n      },\n      directions: {\n        \"inputPanel\": \"inputPanel\",\n        \"renderOptions\": {\"itineraryContainer\": \"itineraryContainer\" },\n        \"requestOptions\": {\"routeMode\": \"driving\", \"maxRoutes\": 2},\n        \"wayPoints\": [\n              {\n                address: 'Chennai, Tamilnadu'\n              },\n              {\n                address: 'Salem, Tamilnadu'\n              },\n              {\n                address: 'Coimbatore, Tamilnadu'\n              }\n            ]\n      }\n    })\n  }\n  handleSubmit(event){\n    if(this.state.searchInput !== null && this.state.searchInput !== \"\"){\n      this.setState({\n        boundary: {\n          \"search\" : this.state.searchInput,\n          \"polygonStyle\" :{\n            fillColor: 'rgba(161,224,255,0.4)',\n            strokeColor: '#a495b2',\n            strokeThickness: 2\n          },\n          \"option\":{\n            entityType: 'PopulatedPlace'\n          }\n        }\n      })\n    }\n    event.preventDefault();\n  }\n  GetLocationHandled(location){\n    this.setState({\n      getLocationHandledData: JSON.stringify(location)\n    });\n  }\n  GetEventHandled(callbackData){\n    console.log(callbackData);\n  }\n  render() {\n    return (\n      <div>\n        <h1><u>Example React-Bingmaps</u></h1>\n        <div>\n          <button onClick={this.changeState.bind(this)}>Change State</button>\n          <button onClick={()=>{this.setState({isVisible:!this.state.isVisible})}}>\n            {this.state.isVisible ? \"Hide\" : \"Show\"}\n          </button>\n          <a target=\"_blank\" href=\"https://github.com/iniamudhan/react-bingmaps/blob/dev/src/App.js\">source</a>\n        </div>\n        {this.state.isVisible && (<div>\n          <div className = \"map-one\">\n          <u>Bingmaps with Center set and zoom = 5</u>\n            <ReactBingmaps \n              id = \"one\"\n              bingmapKey = {this.state.bingmapKey} \n              center = {[13.0827, 80.2707]}\n              zoom = {4}\n              className = \"customClass\"\n            > \n            </ReactBingmaps>\n          </div>\n          <div className = \"map-two\">\n          <u>Bingmaps with Pushpin</u>\n            <ReactBingmaps\n              id = \"two\" \n              className = \"customClass\"\n              bingmapKey = {this.state.bingmapKey}\n              center = {[13.0827, 80.2707]}\n              mapTypeId = {\"aerial\"}\n              pushPins = { this.state.pushPins }\n            > \n            </ReactBingmaps>\n          </div>\n          <div className = \"map-one\">\n          <u>Bingmaps with Infobox</u>\n            <ReactBingmaps \n              id = \"three\"\n              center = {[13.0827, 80.2707]}\n              className = \"customClass\"\n              bingmapKey = {this.state.bingmapKey} \n              infoboxes = {this.state.infoboxes }\n            > \n            </ReactBingmaps>\n          </div>\n          <div className = \"map-two\">\n          <u>Bingmaps with Infobox and Pushpin</u>\n            <ReactBingmaps \n              id = \"four\"\n              center = {[13.0827, 80.2707]}\n              className = \"customClass\"\n              bingmapKey = {this.state.bingmapKey} \n              infoboxesWithPushPins = {this.state.infoboxesWithPushPins}\n            > \n            </ReactBingmaps>\n          </div>\n          <div className = \"map-one\">\n          <u>Bingmaps with Regular Polygons</u>\n            <ReactBingmaps\n              id = \"five\" \n              center = {[13.0827, 80.2707]}\n              className = \"customClass\"\n              bingmapKey = {this.state.bingmapKey}\n              regularPolygons = {this.state.regularPolygons}\n            > \n            </ReactBingmaps>\n          </div>\n          <div className = \"map-two\">\n          <u>Bingmaps with Spatial Data Service (Boundary)</u>\n            <span style={{'display':'inline-block'}}>\n              <form onSubmit={this.handleSubmit.bind(this)}>\n                <input type=\"text\" placeholder=\"search place, pin, city\"\n                  onChange={(event)=>{this.setState({searchInput:event.target.value})}} \n                  value={this.state.searchInput}>\n                </input>\n                <input type=\"submit\" value=\"Search\" />\n              </form>\n            </span>\n            <ReactBingmaps\n              className = \"customClass\"\n              id = \"six\" \n              center = {[13.0827, 80.2707]}\n              bingmapKey = {this.state.bingmapKey}\n              boundary = {this.state.boundary}\n            > \n            </ReactBingmaps>\n          </div>\n          <div className = \"map-one\">\n          <u>Bingmaps with Get Location - <span>{this.state.getLocationHandledData}</span></u>\n            <ReactBingmaps\n              id = \"seven\" \n              className = \"customClass\"\n              center = {[13.0827, 80.2707]}\n              bingmapKey = {this.state.bingmapKey}\n              getLocation = {\n                {addHandler: \"click\", callback:this.GetLocationHandled.bind(this)}\n              }\n            > \n            </ReactBingmaps>\n          </div>\n          <div className = \"map-two\">\n          <u>Bingmaps with EventHandlers - callback data is consoled</u>\n            <ReactBingmaps\n              className = \"customClass\"\n              id = \"eight\" \n              center = {[13.0827, 80.2707]}\n              bingmapKey = {this.state.bingmapKey}\n              mapHandlers = {\n                [\n                  {addHandler: \"click\", callback:this.GetEventHandled.bind(this)},\n                  {addHandler: \"viewchangeend\", callback:this.GetEventHandled.bind(this)}\n                ]\n              }\n            > \n            </ReactBingmaps>\n          </div>\n          <div className = \"map-one\">\n          <u>Bingmaps with Polyline</u>\n            <ReactBingmaps\n              id = \"nine\" \n              className = \"customClass\"\n              center = {[13.0827, 80.2707]}\n              bingmapKey = {this.state.bingmapKey}\n              polyline = {this.state.polyline}\n            > \n            </ReactBingmaps>\n          </div><div className = \"map-two\">\n          <u>Bingmaps with mapOptions - 'maxZoom': 12, 'minZoom': 5 </u>\n            <ReactBingmaps\n              className = \"customClass\"\n              id = \"ten\" \n              center = {[13.0827, 80.2707]}\n              bingmapKey = {this.state.bingmapKey}\n              mapOptions = { {'maxZoom': 12, 'minZoom': 5} }\n            > \n            </ReactBingmaps>\n          </div>\n          <div className = \"map-three\">\n          <u>Bingmaps with Directions</u>\n            <ReactBingmaps\n              className = \"customClass\"\n              id = \"eleven\" \n              center = {[13.0827, 80.2707]}\n              bingmapKey = {this.state.bingmapKey}\n              directions = {this.state.directions}\n            > \n            </ReactBingmaps>\n            <div className=\"direction-container\">\n              <div className=\"input-panel\" id='inputPanel'></div>\n              <div className=\"itinerary-container\" id='itineraryContainer'></div>\n            </div>\n          </div>\n        </div>)}\n        <br />\n        <h3>For new feature to be added, open new issue <a href=\"https://github.com/iniamudhan/react-bingmaps/issues/new\">here</a>. Thanks</h3>\n        <h4>Support and donate for React-Bingmaps.</h4>\n        <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\" >\n          <input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\" />\n          <input type=\"hidden\" name=\"hosted_button_id\" value=\"RVCBMXBZ36B5S\" />\n          <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" alt=\"PayPal – The safer, easier way to pay online!\" />\n          <img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/en_GB/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","/home/adihtya/Desktop/R3/my-app/src/reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":171,"column":14,"nodeType":"28","endLine":171,"endColumn":29},{"ruleId":"22","replacedBy":"29"},{"ruleId":"24","replacedBy":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["31"],["32"],"no-global-assign","no-unsafe-negation"]